-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.addresses
(
    id bigint NOT NULL,
    city character varying(255) COLLATE pg_catalog."default",
    country character varying(255) COLLATE pg_catalog."default",
    postal character varying(255) COLLATE pg_catalog."default",
    province character varying(255) COLLATE pg_catalog."default",
    street character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT addresses_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.chat_room_entity
(
    chat_id character varying(255) COLLATE pg_catalog."default",
    id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    recipient_id character varying(255) COLLATE pg_catalog."default",
    sender_id character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT chat_room_entity_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.friend
(
    accepted_date timestamp(6) without time zone,
    addressee_id bigint NOT NULL,
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    request_date timestamp(6) without time zone NOT NULL,
    requester_id bigint NOT NULL,
    status character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT friend_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.message_entity
(
    is_read boolean NOT NULL,
    attachment_size bigint,
    "timestamp" timestamp(6) without time zone NOT NULL,
    content character varying(1000) COLLATE pg_catalog."default" NOT NULL,
    attachment_name character varying(255) COLLATE pg_catalog."default",
    attachment_url character varying(255) COLLATE pg_catalog."default",
    chat_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    message_type character varying(255) COLLATE pg_catalog."default",
    recipient_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    sender_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT message_entity_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.roles
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    name character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT roles_pkey PRIMARY KEY (id),
    CONSTRAINT roles_name_key UNIQUE (name)
    );

CREATE TABLE IF NOT EXISTS public.room
(
    created_at timestamp(6) without time zone NOT NULL,
    updated_at timestamp(6) without time zone,
    id uuid NOT NULL,
    address character varying(255) COLLATE pg_catalog."default" NOT NULL,
    description character varying(255) COLLATE pg_catalog."default",
    head_roommate_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    name character varying(255) COLLATE pg_catalog."default",
    room_code character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT room_pkey PRIMARY KEY (id),
    CONSTRAINT room_room_code_key UNIQUE (room_code)
    );

CREATE TABLE IF NOT EXISTS public.room_member
(
    joined_at timestamp(6) without time zone NOT NULL,
    updated_at timestamp(6) without time zone,
    user_id bigint NOT NULL,
    id uuid NOT NULL,
    room_id uuid NOT NULL,
    role character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT room_member_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.users
(
    address_id bigint,
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    auth_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    first_name character varying(255) COLLATE pg_catalog."default",
    last_name character varying(255) COLLATE pg_catalog."default",
    phone character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT users_address_id_key UNIQUE (address_id),
    CONSTRAINT users_auth_id_key UNIQUE (auth_id),
    CONSTRAINT users_email_key UNIQUE (email)
    );

CREATE TABLE IF NOT EXISTS public.users_roles
(
    roles_id bigint NOT NULL,
    user_entity_id bigint NOT NULL,
    CONSTRAINT users_roles_pkey PRIMARY KEY (roles_id, user_entity_id)
    );

ALTER TABLE IF EXISTS public.friend
    ADD CONSTRAINT "FK5gxe8kibvhk9j93pnhj20osgr" FOREIGN KEY (requester_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.friend
    ADD CONSTRAINT "FKly8tgypfjuoyde46kkjkr5w52" FOREIGN KEY (addressee_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.room_member
    ADD CONSTRAINT "FKae25xhk7e1jgcx1v4ca36c23o" FOREIGN KEY (room_id)
    REFERENCES public.room (id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.room_member
    ADD CONSTRAINT fk_room_member_user_id FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT "FKqq17xd0vrm40dc3v2r3qf8gpc" FOREIGN KEY (address_id)
    REFERENCES public.addresses (id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS users_address_id_key
    ON public.users(address_id);


ALTER TABLE IF EXISTS public.users_roles
    ADD CONSTRAINT "FKj4q31mdjun5vodpkcvhrq4ufp" FOREIGN KEY (user_entity_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.users_roles
    ADD CONSTRAINT "FKoq2ymhpm0kretp06snvc5mn4f" FOREIGN KEY (roles_id)
    REFERENCES public.roles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;

END;